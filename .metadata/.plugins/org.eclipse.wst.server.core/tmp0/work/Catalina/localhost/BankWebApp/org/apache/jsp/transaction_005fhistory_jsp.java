/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.42
 * Generated at: 2025-07-06 17:51:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.List;
import com.bankapp.Transaction;
import java.text.SimpleDateFormat;

public final class transaction_005fhistory_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(4);
    _jspx_imports_classes.add("com.bankapp.Transaction");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    String accNum = (String) session.getAttribute("accountNumber");
    if (accNum == null) {
        response.sendRedirect("login.jsp");
        return;
    }

    List<Transaction> transactions = (List<Transaction>) request.getAttribute("transactions");
    String fromDate = request.getParameter("from");
    String toDate = request.getParameter("to");
    String txnType = request.getParameter("type");

    SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("  <meta charset=\"UTF-8\" />\r\n");
      out.write("  <title>Transaction History | ROY BANK</title>\r\n");
      out.write("  <link href=\"https://fonts.googleapis.com/css2?family=Poppins&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("  <style>\r\n");
      out.write("    * { box-sizing: border-box; font-family: 'Poppins', sans-serif; }\r\n");
      out.write("\r\n");
      out.write("    body {\r\n");
      out.write("      margin: 0;\r\n");
      out.write("      background: #f8f8f8;\r\n");
      out.write("      display: flex;\r\n");
      out.write("      flex-direction: column;\r\n");
      out.write("      min-height: 100vh;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    header {\r\n");
      out.write("      background: linear-gradient(to right, #ff6600, #ff8533);\r\n");
      out.write("      color: white;\r\n");
      out.write("      padding: 20px;\r\n");
      out.write("      text-align: center;\r\n");
      out.write("      font-size: 26px;\r\n");
      out.write("      font-weight: bold;\r\n");
      out.write("      position: relative;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .home-btn {\r\n");
      out.write("      position: absolute;\r\n");
      out.write("      left: 20px;\r\n");
      out.write("      top: 50%;\r\n");
      out.write("      transform: translateY(-50%);\r\n");
      out.write("      background-color: #ffffff;\r\n");
      out.write("      color: #ff6600;\r\n");
      out.write("      text-decoration: none;\r\n");
      out.write("      padding: 10px 18px;\r\n");
      out.write("      border-radius: 6px;\r\n");
      out.write("      font-weight: 600;\r\n");
      out.write("      border: 2px solid #fff;\r\n");
      out.write("      transition: all 0.3s ease;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .home-btn:hover {\r\n");
      out.write("      background-color: white;\r\n");
      out.write("      color: #e65c00;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    main {\r\n");
      out.write("      flex: 1;\r\n");
      out.write("      padding: 40px 20px;\r\n");
      out.write("      display: flex;\r\n");
      out.write("      flex-direction: column;\r\n");
      out.write("      align-items: center;\r\n");
      out.write("      gap: 30px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .card {\r\n");
      out.write("      background: white;\r\n");
      out.write("      padding: 30px;\r\n");
      out.write("      border-radius: 14px;\r\n");
      out.write("      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.06);\r\n");
      out.write("      width: 100%;\r\n");
      out.write("      max-width: 600px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .card h2 {\r\n");
      out.write("      text-align: center;\r\n");
      out.write("      color: #333;\r\n");
      out.write("      margin-bottom: 20px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    label {\r\n");
      out.write("      display: block;\r\n");
      out.write("      margin-top: 16px;\r\n");
      out.write("      font-weight: 500;\r\n");
      out.write("      color: #444;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    input[type=\"date\"],\r\n");
      out.write("    select {\r\n");
      out.write("      width: 100%;\r\n");
      out.write("      padding: 12px;\r\n");
      out.write("      margin-top: 6px;\r\n");
      out.write("      border: 1px solid #ccc;\r\n");
      out.write("      border-radius: 10px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .btn {\r\n");
      out.write("      background-color: #ff6600;\r\n");
      out.write("      color: white;\r\n");
      out.write("      border: none;\r\n");
      out.write("      padding: 14px;\r\n");
      out.write("      border-radius: 10px;\r\n");
      out.write("      width: 100%;\r\n");
      out.write("      margin-top: 25px;\r\n");
      out.write("      font-size: 16px;\r\n");
      out.write("      font-weight: 600;\r\n");
      out.write("      cursor: pointer;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .btn:hover {\r\n");
      out.write("      background-color: #e65c00;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    table {\r\n");
      out.write("      width: 100%;\r\n");
      out.write("      max-width: 800px;\r\n");
      out.write("      background: white;\r\n");
      out.write("      border-collapse: collapse;\r\n");
      out.write("      border-radius: 12px;\r\n");
      out.write("      box-shadow: 0 0 12px rgba(0,0,0,0.08);\r\n");
      out.write("      overflow: hidden;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    th, td {\r\n");
      out.write("      padding: 16px;\r\n");
      out.write("      text-align: center;\r\n");
      out.write("      border-bottom: 1px solid #eee;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    th {\r\n");
      out.write("      background-color: #ff6600;\r\n");
      out.write("      color: white;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    tr:last-child td {\r\n");
      out.write("      border-bottom: none;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .no-data {\r\n");
      out.write("      text-align: center;\r\n");
      out.write("      font-size: 16px;\r\n");
      out.write("      color: #888;\r\n");
      out.write("      margin-top: 20px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .export-form {\r\n");
      out.write("      max-width: 800px;\r\n");
      out.write("      width: 100%;\r\n");
      out.write("      display: flex;\r\n");
      out.write("      justify-content: flex-end;\r\n");
      out.write("      margin-top: 10px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .export-form button {\r\n");
      out.write("      background-color: #28a745;\r\n");
      out.write("      color: white;\r\n");
      out.write("      border: none;\r\n");
      out.write("      padding: 12px 20px;\r\n");
      out.write("      border-radius: 8px;\r\n");
      out.write("      cursor: pointer;\r\n");
      out.write("      font-weight: 600;\r\n");
      out.write("      transition: background-color 0.3s;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .export-form button:hover {\r\n");
      out.write("      background-color: #218838;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    footer {\r\n");
      out.write("      text-align: center;\r\n");
      out.write("      padding: 12px;\r\n");
      out.write("      background-color: #f2f2f2;\r\n");
      out.write("      color: #777;\r\n");
      out.write("      font-size: 14px;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    @media (max-width: 600px) {\r\n");
      out.write("      th, td { font-size: 14px; padding: 12px; }\r\n");
      out.write("      .card h2 { font-size: 20px; }\r\n");
      out.write("    }\r\n");
      out.write("  </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("  <header>\r\n");
      out.write("    <a href=\"dashboard.jsp\" class=\"home-btn\"> Home</a>\r\n");
      out.write("    ROY BANK - Transaction History\r\n");
      out.write("  </header>\r\n");
      out.write("\r\n");
      out.write("  <main>\r\n");
      out.write("\r\n");
      out.write("    <!-- Filter Form -->\r\n");
      out.write("    <div class=\"card\">\r\n");
      out.write("      <h2>Filter Transactions</h2>\r\n");
      out.write("      <form action=\"TransactionHistoryServlet\" method=\"post\">\r\n");
      out.write("        <label for=\"from\">Start Date</label>\r\n");
      out.write("        <input type=\"date\" id=\"from\" name=\"from\" value=\"");
      out.print( fromDate != null ? fromDate : "" );
      out.write("\" required>\r\n");
      out.write("\r\n");
      out.write("        <label for=\"to\">End Date</label>\r\n");
      out.write("        <input type=\"date\" id=\"to\" name=\"to\" value=\"");
      out.print( toDate != null ? toDate : "" );
      out.write("\" required>\r\n");
      out.write("\r\n");
      out.write("        <label for=\"type\">Transaction Type</label>\r\n");
      out.write("        <select name=\"type\" id=\"type\">\r\n");
      out.write("          <option value=\"All\" ");
      out.print( ("All".equalsIgnoreCase(txnType) || txnType == null) ? "selected" : "" );
      out.write(">All</option>\r\n");
      out.write("          <option value=\"Deposit\" ");
      out.print( "Deposit".equalsIgnoreCase(txnType) ? "selected" : "" );
      out.write(">Deposit</option>\r\n");
      out.write("          <option value=\"Withdraw\" ");
      out.print( "Withdraw".equalsIgnoreCase(txnType) ? "selected" : "" );
      out.write(">Withdraw</option>\r\n");
      out.write("          <option value=\"Transfer\" ");
      out.print( "Transfer".equalsIgnoreCase(txnType) ? "selected" : "" );
      out.write(">Transfer</option>\r\n");
      out.write("          <option value=\"Received\" ");
      out.print( "Received".equalsIgnoreCase(txnType) ? "selected" : "" );
      out.write(">Received</option>\r\n");
      out.write("        </select>\r\n");
      out.write("\r\n");
      out.write("        <input type=\"submit\" value=\"View History\" class=\"btn\">\r\n");
      out.write("      </form>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Table -->\r\n");
      out.write("    ");

      if (transactions != null && !transactions.isEmpty()) {
    
      out.write("\r\n");
      out.write("      <table>\r\n");
      out.write("        <tr>\r\n");
      out.write("          <th>Date</th>\r\n");
      out.write("          <th>Type</th>\r\n");
      out.write("          <th>Amount</th>\r\n");
      out.write("          \r\n");
      out.write("        </tr>\r\n");
      out.write("        ");
 for (Transaction txn : transactions) { 
      out.write("\r\n");
      out.write("          <tr>\r\n");
      out.write("            <td>");
      out.print( sdf.format(txn.getDate()) );
      out.write("</td>\r\n");
      out.write("            <td>");
      out.print( txn.getType() );
      out.write("</td>\r\n");
      out.write("            <td>Rs ");
      out.print( String.format("%.2f", txn.getAmount()) );
      out.write("</td>\r\n");
      out.write("            \r\n");
      out.write("          </tr>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("      </table>\r\n");
      out.write("\r\n");
      out.write("      \r\n");
      out.write("    ");

      } else if (transactions != null) {
    
      out.write("\r\n");
      out.write("      <div class=\"no-data\">No transactions found for the selected filters.</div>\r\n");
      out.write("    ");

      }
    
      out.write("\r\n");
      out.write("\r\n");
      out.write("  </main>\r\n");
      out.write("\r\n");
      out.write("  <footer>&copy; 2025 ROY BANK. All rights reserved.</footer>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
